{
  "address": "0xD7Ea87AFd1fdd3e4e8248c612641F6C865806FA8",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "deployer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "deployed",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "contractType",
          "type": "string"
        }
      ],
      "name": "ContractDeployed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "bytecodes",
          "type": "bytes[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "salts",
          "type": "bytes32[]"
        },
        {
          "internalType": "string[]",
          "name": "types",
          "type": "string[]"
        }
      ],
      "name": "batchDeploy",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "deployed",
          "type": "address[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "bytecodeHash",
          "type": "bytes32"
        }
      ],
      "name": "computeAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "contractTypes",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "bytecode",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "contractType",
          "type": "string"
        }
      ],
      "name": "deploy",
      "outputs": [
        {
          "internalType": "address",
          "name": "deployed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "bytecode",
          "type": "bytes"
        },
        {
          "internalType": "string",
          "name": "contractType",
          "type": "string"
        }
      ],
      "name": "deployWithAutoSalt",
      "outputs": [
        {
          "internalType": "address",
          "name": "deployed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "deploymentBySalt",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "deploymentsByDeployer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "deployed",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "emergencyTransferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "deployer",
          "type": "address"
        }
      ],
      "name": "getDeployments",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isDeployedContract",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x36a3d971f69db2bbf723fcdcb945ae69579755281c0828e53f0bd3cc8644217b",
  "receipt": {
    "to": null,
    "from": "0xDDd0050d1E084dFc72d5d06447Cc10bcD3fEF60F",
    "contractAddress": "0xD7Ea87AFd1fdd3e4e8248c612641F6C865806FA8",
    "transactionIndex": 0,
    "gasUsed": "1050042",
    "logsBloom": "0x
    "blockHash": "0x436195f33bfa80bfcd73e2b511c624c35fcd6b0c0acf295af3bba3661984812e",
    "transactionHash": "0x36a3d971f69db2bbf723fcdcb945ae69579755281c0828e53f0bd3cc8644217b",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 36088889,
        "transactionHash": "0x36a3d971f69db2bbf723fcdcb945ae69579755281c0828e53f0bd3cc8644217b",
        "address": "0xD7Ea87AFd1fdd3e4e8248c612641F6C865806FA8",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000ddd0050d1e084dfc72d5d06447cc10bcd3fef60f"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x436195f33bfa80bfcd73e2b511c624c35fcd6b0c0acf295af3bba3661984812e"
      }
    ],
    "blockNumber": 36088889,
    "cumulativeGasUsed": "1050042",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "163865cc55892e8ecff25c8dca601d8f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"deployed\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"contractType\",\"type\":\"string\"}],\"name\":\"ContractDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"bytecodes\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"salts\",\"type\":\"bytes32[]\"},{\"internalType\":\"string[]\",\"name\":\"types\",\"type\":\"string[]\"}],\"name\":\"batchDeploy\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"deployed\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"bytecodeHash\",\"type\":\"bytes32\"}],\"name\":\"computeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"contractTypes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"contractType\",\"type\":\"string\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"contractType\",\"type\":\"string\"}],\"name\":\"deployWithAutoSalt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"deploymentBySalt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"deploymentsByDeployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployed\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"emergencyTransferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"getDeployments\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isDeployedContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Includes deployment tracking and salt management\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"batchDeploy(bytes[],bytes32[],string[])\":{\"params\":{\"bytecodes\":\"Array of bytecodes to deploy\",\"salts\":\"Array of salts for each deployment\",\"types\":\"Array of contract type identifiers\"},\"returns\":{\"deployed\":\"Array of deployed contract addresses\"}},\"computeAddress(bytes32,bytes32)\":{\"params\":{\"bytecodeHash\":\"The keccak256 hash of the bytecode\",\"salt\":\"The salt for deterministic deployment\"},\"returns\":{\"_0\":\"The computed address\"}},\"deploy(bytes,bytes32,string)\":{\"params\":{\"bytecode\":\"The bytecode of the contract to deploy\",\"contractType\":\"A string identifier for the contract type\",\"salt\":\"The salt for deterministic deployment\"},\"returns\":{\"deployed\":\"The address of the deployed contract\"}},\"deployWithAutoSalt(bytes,string)\":{\"params\":{\"bytecode\":\"The bytecode of the contract to deploy\",\"contractType\":\"A string identifier for the contract type\"},\"returns\":{\"deployed\":\"The address of the deployed contract\"}},\"emergencyTransferOwnership(address,address)\":{\"details\":\"Only callable by factory owner\",\"params\":{\"deployed\":\"The deployed contract address\",\"newOwner\":\"The new owner address\"}},\"getDeployments(address)\":{\"params\":{\"deployer\":\"The address of the deployer\"},\"returns\":{\"_0\":\"An array of deployed contract addresses\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"CREATE2FactoryWithOwnership\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"batchDeploy(bytes[],bytes32[],string[])\":{\"notice\":\"Batch deploy multiple contracts\"},\"computeAddress(bytes32,bytes32)\":{\"notice\":\"Compute the deployment address for given bytecode and salt\"},\"deploy(bytes,bytes32,string)\":{\"notice\":\"Deploy a contract using CREATE2 with automatic ownership transfer\"},\"deployWithAutoSalt(bytes,string)\":{\"notice\":\"Deploy with auto-generated salt\"},\"emergencyTransferOwnership(address,address)\":{\"notice\":\"Emergency function to transfer ownership of a deployed contract\"},\"getDeployments(address)\":{\"notice\":\"Get all deployments by a specific deployer\"}},\"notice\":\"CREATE2 factory that automatically transfers ownership of deployed contracts\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/factory/CREATE2FactoryWithOwnership.sol\":\"CREATE2FactoryWithOwnership\"},\"evmVersion\":\"paris\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031373530393832303230323638\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/core/factory/CREATE2FactoryWithOwnership.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport \\\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\\\";\\n\\n/**\\n * @title CREATE2FactoryWithOwnership\\n * @notice CREATE2 factory that automatically transfers ownership of deployed contracts\\n * @dev Includes deployment tracking and salt management\\n */\\ncontract CREATE2FactoryWithOwnership is Ownable {\\n    // Events\\n    event ContractDeployed(\\n        address indexed deployer,\\n        address indexed deployed,\\n        bytes32 indexed salt,\\n        string contractType\\n    );\\n    \\n    // Tracking\\n    mapping(address => address[]) public deploymentsByDeployer;\\n    mapping(address => bool) public isDeployedContract;\\n    mapping(bytes32 => address) public deploymentBySalt;\\n    mapping(address => string) public contractTypes;\\n    \\n    // Salt counter for automatic salt generation\\n    uint256 private saltCounter;\\n    \\n    constructor() Ownable(msg.sender) {}\\n    \\n    /**\\n     * @notice Deploy a contract using CREATE2 with automatic ownership transfer\\n     * @param bytecode The bytecode of the contract to deploy\\n     * @param salt The salt for deterministic deployment\\n     * @param contractType A string identifier for the contract type\\n     * @return deployed The address of the deployed contract\\n     */\\n    function deploy(\\n        bytes memory bytecode,\\n        bytes32 salt,\\n        string memory contractType\\n    ) public returns (address deployed) {\\n        // Check if already deployed with this salt\\n        require(deploymentBySalt[salt] == address(0), \\\"Salt already used\\\");\\n        \\n        // Deploy using CREATE2\\n        assembly {\\n            deployed := create2(0, add(bytecode, 0x20), mload(bytecode), salt)\\n            if iszero(extcodesize(deployed)) {\\n                revert(0, 0)\\n            }\\n        }\\n        \\n        // Try to transfer ownership to the deployer\\n        (bool success,) = deployed.call(\\n            abi.encodeWithSignature(\\\"transferOwnership(address)\\\", msg.sender)\\n        );\\n        \\n        // If ownership transfer fails, try to set admin\\n        if (!success) {\\n            (success,) = deployed.call(\\n                abi.encodeWithSignature(\\\"setAdmin(address)\\\", msg.sender)\\n            );\\n        }\\n        \\n        // Track deployment\\n        deploymentsByDeployer[msg.sender].push(deployed);\\n        isDeployedContract[deployed] = true;\\n        deploymentBySalt[salt] = deployed;\\n        contractTypes[deployed] = contractType;\\n        \\n        emit ContractDeployed(msg.sender, deployed, salt, contractType);\\n    }\\n    \\n    /**\\n     * @notice Deploy with auto-generated salt\\n     * @param bytecode The bytecode of the contract to deploy\\n     * @param contractType A string identifier for the contract type\\n     * @return deployed The address of the deployed contract\\n     */\\n    function deployWithAutoSalt(\\n        bytes memory bytecode,\\n        string memory contractType\\n    ) public returns (address deployed) {\\n        bytes32 salt = keccak256(abi.encodePacked(msg.sender, saltCounter++));\\n        return deploy(bytecode, salt, contractType);\\n    }\\n    \\n    /**\\n     * @notice Compute the deployment address for given bytecode and salt\\n     * @param salt The salt for deterministic deployment\\n     * @param bytecodeHash The keccak256 hash of the bytecode\\n     * @return The computed address\\n     */\\n    function computeAddress(\\n        bytes32 salt,\\n        bytes32 bytecodeHash\\n    ) public view returns (address) {\\n        return address(uint160(uint256(keccak256(abi.encodePacked(\\n            bytes1(0xff),\\n            address(this),\\n            salt,\\n            bytecodeHash\\n        )))));\\n    }\\n    \\n    /**\\n     * @notice Get all deployments by a specific deployer\\n     * @param deployer The address of the deployer\\n     * @return An array of deployed contract addresses\\n     */\\n    function getDeployments(address deployer) public view returns (address[] memory) {\\n        return deploymentsByDeployer[deployer];\\n    }\\n    \\n    /**\\n     * @notice Batch deploy multiple contracts\\n     * @param bytecodes Array of bytecodes to deploy\\n     * @param salts Array of salts for each deployment\\n     * @param types Array of contract type identifiers\\n     * @return deployed Array of deployed contract addresses\\n     */\\n    function batchDeploy(\\n        bytes[] memory bytecodes,\\n        bytes32[] memory salts,\\n        string[] memory types\\n    ) public returns (address[] memory deployed) {\\n        require(\\n            bytecodes.length == salts.length && salts.length == types.length,\\n            \\\"Array length mismatch\\\"\\n        );\\n        \\n        deployed = new address[](bytecodes.length);\\n        for (uint256 i = 0; i < bytecodes.length; i++) {\\n            deployed[i] = deploy(bytecodes[i], salts[i], types[i]);\\n        }\\n    }\\n    \\n    /**\\n     * @notice Emergency function to transfer ownership of a deployed contract\\n     * @dev Only callable by factory owner\\n     * @param deployed The deployed contract address\\n     * @param newOwner The new owner address\\n     */\\n    function emergencyTransferOwnership(\\n        address deployed,\\n        address newOwner\\n    ) public onlyOwner {\\n        require(isDeployedContract[deployed], \\\"Not a deployed contract\\\");\\n        \\n        (bool success,) = deployed.call(\\n            abi.encodeWithSignature(\\\"transferOwnership(address)\\\", newOwner)\\n        );\\n        require(success, \\\"Ownership transfer failed\\\");\\n    }\\n} \",\"keccak256\":\"0x7150797eab730598d4c973885ad0f735d02982694b4830b1a2f4789e99d1d101\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436101561001257600080fd5b60003560e01c806301b97a99146100e757806323fa9e43146100e2578063424daa70146100dd578063481286e6146100d85780634f88d48a146100d35780636290caec146100ce578063715018a6146100c957806388f80908146100c45780638da5cb5b146100bf578063904818d1146100ba578063e5bed411146100b5578063ea396214146100b05763f2fde38b146100ab57600080fd5b6109e2565b6109ae565b6108c3565b6107e5565b610739565b610673565b61061a565b6105db565b61055b565b6104f0565b61048e565b610334565b61018d565b634e487b7160e01b600052604160045260246000fd5b90601f801991011681019081106001600160401b0382111761012357604052565b6100ec565b6001600160401b03811161012357601f01601f191660200190565b81601f820112156101885760208135910161015d82610128565b9261016b6040519485610102565b828452828201116101885781600092602092838601378301015290565b600080fd5b34610188576060366003190112610188576004356001600160401b038111610188576101bd903690600401610143565b60243590604435906001600160401b038211610188576020926101e76101ed933690600401610143565b91610c44565b6040516001600160a01b039091168152f35b6001600160401b0381116101235760051b60200190565b9080601f8301121561018857813561022d816101ff565b9261023b6040519485610102565b81845260208085019260051b82010192831161018857602001905b8282106102635750505090565b8135815260209182019101610256565b9080601f8301121561018857813561028a816101ff565b926102986040519485610102565b81845260208085019260051b820101918383116101885760208201905b8382106102c457505050505090565b81356001600160401b038111610188576020916102e687848094880101610143565b8152019101906102b5565b602060408183019282815284518094520192019060005b8181106103155750505090565b82516001600160a01b0316845260209384019390920191600101610308565b34610188576060366003190112610188576004356001600160401b038111610188573660238201121561018857806004013561036f816101ff565b9161037d6040519384610102565b8183526024602084019260051b820101903682116101885760248101925b82841061040057846024356001600160401b038111610188576103c2903690600401610216565b90604435906001600160401b038211610188576103fc926103ea6103f0933690600401610273565b91610e35565b604051918291826102f1565b0390f35b83356001600160401b03811161018857602091610424839260243691870101610143565b81520193019261039b565b600435906001600160a01b038216820361018857565b602435906001600160a01b038216820361018857565b634e487b7160e01b600052603260045260246000fd5b80548210156104895760005260206000200190600090565b61045b565b34610188576040366003190112610188576104a761042f565b6001600160a01b03166000908152600160205260409020805460243590811015610188576104d491610471565b905460405160039290921b1c6001600160a01b03168152602090f35b34610188576040366003190112610188576103fc6004356024359060405191602083019160ff60f81b83523060601b6021850152603584015260558301526055825261053d607583610102565b905190206040516001600160a01b0390911681529081906020820190565b34610188576020366003190112610188576001600160a01b0361057c61042f565b166000526001602052604060002060405190816020825491828152019160005260206000209060005b8181106105bc576103fc856103f081870382610102565b82546001600160a01b03168452602090930192600192830192016105a5565b34610188576020366003190112610188576001600160a01b036105fc61042f565b166000526002602052602060ff604060002054166040519015158152f35b3461018857600036600319011261018857610633610f4b565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610188576040366003190112610188576004356001600160401b038111610188576106a3903690600401610143565b6024356001600160401b038111610188576106c2903690600401610143565b600554906000198214610723576103fc92826001610709940160055560405160208101913360601b8352603482015260348152610700605482610102565b51902090610c44565b6040516001600160a01b0390911681529081906020820190565b634e487b7160e01b600052601160045260246000fd5b34610188576000366003190112610188576000546040516001600160a01b039091168152602090f35b90600182811c92168015610792575b602083101461077c57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610771565b91909160208152825180602083015260005b8181106107cf575060409293506000838284010152601f8019910116010190565b80602080928701015160408286010152016107ae565b34610188576020366003190112610188576001600160a01b0361080661042f565b16600052600460205260406000206040519060009080549061082782610762565b808552916001811690811561089c575060011461085b575b6103fc8461084f81860382610102565b6040519182918261079c565b600090815260208120939250905b8082106108825750909150810160200161084f8261083f565b919260018160209254838588010152019101909291610869565b60ff191660208087019190915292151560051b8501909201925061084f915083905061083f565b34610188576040366003190112610188576108dc61042f565b6108e4610445565b906108ed610f4b565b6001600160a01b03811660009081526002602052604090205460ff16156109695760405163f2fde38b60e01b602082019081526001600160a01b039093166024820152610967926000928392909190839061095581604481015b03601f198101835282610102565b51925af1610961610aab565b50610eff565b005b60405162461bcd60e51b815260206004820152601760248201527f4e6f742061206465706c6f79656420636f6e74726163740000000000000000006044820152606490fd5b34610188576020366003190112610188576004356000526003602052602060018060a01b0360406000205416604051908152f35b34610188576020366003190112610188576109fb61042f565b610a03610f4b565b6001600160a01b03168015610a5557600080546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b600052600060045260246000fd5b15610a7257565b60405162461bcd60e51b815260206004820152601160248201527014d85b1d08185b1c9958591e481d5cd959607a1b6044820152606490fd5b3d15610ad6573d90610abc82610128565b91610aca6040519384610102565b82523d6000602084013e565b606090565b80546801000000000000000081101561012357610afd91600182018155610471565b81546001600160a01b0393841660039290921b91821b9390911b1916919091179055565b601f8211610b2e57505050565b6000526020600020906020601f840160051c83019310610b69575b601f0160051c01905b818110610b5d575050565b60008155600101610b52565b9091508190610b49565b91909182516001600160401b03811161012357610b9a81610b948454610762565b84610b21565b6020601f8211600114610bdb578190610bcc939495600092610bd0575b50508160011b916000199060031b1c19161790565b9055565b015190503880610bb7565b601f19821690610bf084600052602060002090565b9160005b818110610c2c57509583600195969710610c13575b505050811b019055565b015160001960f88460031b161c19169055388080610c09565b9192602060018192868b015181550194019201610bf4565b8190939293610c7e60018060a01b03610c77610c6a856000526003602052604060002090565b546001600160a01b031690565b1615610a6b565b6020815191016000f592833b156101885760405163f2fde38b60e01b60208201908152336024830152600091829190610cba8160448101610947565b519082885af1610cc8610aab565b5015610daf575b336000908152600160205260409020610ce9908590610adb565b6001600160a01b0384166000908152600260205260409020610d1290805460ff19166001179055565b610d4984610d2a846000526003602052604060002090565b80546001600160a01b0319166001600160a01b03909216919091179055565b6001600160a01b0384166000908152600460205260409020610d6c908290610b73565b6040516001600160a01b0385169133917fc0b80bbf92f54fa456f1a6b38acbfe763cee02e0b8118f6c8e1ea504da9961bb918190610daa908261079c565b0390a4565b604051633825b60160e11b60208201908152336024830152600091829190610dda8160448101610947565b519082885af150610de9610aab565b50610ccf565b90610df9826101ff565b610e066040519182610102565b8281528092610e17601f19916101ff565b0190602036910137565b80518210156104895760209160051b010190565b9291835182518091149081610ef4575b5015610eb757610e558451610def565b9360005b8151811015610eb15780610eab610e92610e7560019486610e21565b51610e808489610e21565b51610e8b8589610e21565b5191610c44565b610e9c838a610e21565b6001600160a01b039091169052565b01610e59565b50505050565b60405162461bcd60e51b8152602060048201526015602482015274082e4e4c2f240d8cadccee8d040dad2e6dac2e8c6d605b1b6044820152606490fd5b905081511438610e45565b15610f0657565b60405162461bcd60e51b815260206004820152601960248201527f4f776e657273686970207472616e73666572206661696c6564000000000000006044820152606490fd5b6000546001600160a01b03163303610f5f57565b63118cdaa760e01b6000523360045260246000fdfea2646970667358221220b1effb8d0fb236b2c699aafad4239ccd60bca8c2878ae21271261b5b87c55e6d64736f6c634300081c0033",
  "devdoc": {
    "details": "Includes deployment tracking and salt management",
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "batchDeploy(bytes[],bytes32[],string[])": {
        "params": {
          "bytecodes": "Array of bytecodes to deploy",
          "salts": "Array of salts for each deployment",
          "types": "Array of contract type identifiers"
        },
        "returns": {
          "deployed": "Array of deployed contract addresses"
        }
      },
      "computeAddress(bytes32,bytes32)": {
        "params": {
          "bytecodeHash": "The keccak256 hash of the bytecode",
          "salt": "The salt for deterministic deployment"
        },
        "returns": {
          "_0": "The computed address"
        }
      },
      "deploy(bytes,bytes32,string)": {
        "params": {
          "bytecode": "The bytecode of the contract to deploy",
          "contractType": "A string identifier for the contract type",
          "salt": "The salt for deterministic deployment"
        },
        "returns": {
          "deployed": "The address of the deployed contract"
        }
      },
      "deployWithAutoSalt(bytes,string)": {
        "params": {
          "bytecode": "The bytecode of the contract to deploy",
          "contractType": "A string identifier for the contract type"
        },
        "returns": {
          "deployed": "The address of the deployed contract"
        }
      },
      "emergencyTransferOwnership(address,address)": {
        "details": "Only callable by factory owner",
        "params": {
          "deployed": "The deployed contract address",
          "newOwner": "The new owner address"
        }
      },
      "getDeployments(address)": {
        "params": {
          "deployer": "The address of the deployer"
        },
        "returns": {
          "_0": "An array of deployed contract addresses"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "CREATE2FactoryWithOwnership",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "batchDeploy(bytes[],bytes32[],string[])": {
        "notice": "Batch deploy multiple contracts"
      },
      "computeAddress(bytes32,bytes32)": {
        "notice": "Compute the deployment address for given bytecode and salt"
      },
      "deploy(bytes,bytes32,string)": {
        "notice": "Deploy a contract using CREATE2 with automatic ownership transfer"
      },
      "deployWithAutoSalt(bytes,string)": {
        "notice": "Deploy with auto-generated salt"
      },
      "emergencyTransferOwnership(address,address)": {
        "notice": "Emergency function to transfer ownership of a deployed contract"
      },
      "getDeployments(address)": {
        "notice": "Get all deployments by a specific deployer"
      }
    },
    "notice": "CREATE2 factory that automatically transfers ownership of deployed contracts",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 42109,
        "contract": "contracts/core/factory/CREATE2FactoryWithOwnership.sol:CREATE2FactoryWithOwnership",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 3512,
        "contract": "contracts/core/factory/CREATE2FactoryWithOwnership.sol:CREATE2FactoryWithOwnership",
        "label": "deploymentsByDeployer",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_array(t_address)dyn_storage)"
      },
      {
        "astId": 3516,
        "contract": "contracts/core/factory/CREATE2FactoryWithOwnership.sol:CREATE2FactoryWithOwnership",
        "label": "isDeployedContract",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 3520,
        "contract": "contracts/core/factory/CREATE2FactoryWithOwnership.sol:CREATE2FactoryWithOwnership",
        "label": "deploymentBySalt",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_bytes32,t_address)"
      },
      {
        "astId": 3524,
        "contract": "contracts/core/factory/CREATE2FactoryWithOwnership.sol:CREATE2FactoryWithOwnership",
        "label": "contractTypes",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_string_storage)"
      },
      {
        "astId": 3526,
        "contract": "contracts/core/factory/CREATE2FactoryWithOwnership.sol:CREATE2FactoryWithOwnership",
        "label": "saltCounter",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_array(t_address)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address[])",
        "numberOfBytes": "32",
        "value": "t_array(t_address)dyn_storage"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_mapping(t_bytes32,t_address)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}